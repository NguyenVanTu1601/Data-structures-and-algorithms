#include<iostream>
#include<bits/stdc++.h>
using namespace std;

struct Canh{
	int dau;
	int cuoi;
	int trongso;
};

bool cmp(Canh a, Canh b){
	if(a.trongso == b.trongso){
		if(a.dau == b.dau) return a.cuoi < b.cuoi;
		return a.dau < b.dau;
	}
	return a.trongso < b.trongso;
}

int Find(int x, int father[]){
	// Tim nut cha cua nut x
	while(x != father[x]) x = father[x];
	return x;
}

void Union(int x, int y,long long Num[], int father[]){
	// Khi cay con thuoc rung cay goc co so cay it hon vao rung co so say nhieu hon
	if(Num[x] < Num[y]) {
		father[x] = y;
		Num[y] += Num[x];
	}
	
	else{
		father[y] = x;
		Num[x] += Num[y]; 
	}
}

main(){
	int t;
	cin >> t;
	while(t--){
		int n, m;
		vector<Canh> E; // Luu cac canh ban dau
		vector<Canh> T; // Luu canh tao cay khung
		int Kt = 1; // Kiem tra xem ton tai cay khung hay khong
		long long lenKhung = 0;
		cin >> n >> m;
		int father[n+1]; // Cha cua nut x bat ki 
		long long Num[n+1]; // So phan tu cua cay con chua x
		Canh x;
		for(int i = 0; i < m; i++){
			cin >> x.dau >> x.cuoi >> x.trongso;
			E.push_back(x);
		}
		
		for(int i = 1; i<= n; i++){
			father[i] = i;
			Num[i] = 1;
		}
		sort(E.begin(),E.end(),cmp);
		int socanh = 0;
		int i = 0;
		while(socanh < n-1){
			int x = Find(E[i].dau,father);
			int y = Find(E[i].cuoi,father);
			if(x != y){
				Union(x,y,Num,father);
				socanh++;
				lenKhung += E[i].trongso;
				T.push_back(E[i]);
				i++;
			}
			else{
				i++;
			}
		}
		if(socanh != n - 1) Kt = 0;
		cout << lenKhung << endl;
	}
	
    return 0;
}
// Edit Tu Nguyen acc 204_430 ^^ 
/*
13 26
1 2 2
1 3 1
1 4 3
2 3 2
2 6 5
2 7 5
3 4 4
3 6 5
4 5 5
4 6 5
5 6 6
5 10 6
6 7 6
6 8 6
6 9 6
6 10 6
7 8 6
8 9 7
8 12 7
8 13 7
9 10 7
9 11 7
10 11 7
10 12 7
11 12 8
12 13 8
60
*/
