push lần lượt các số trong các đa thức vào queue khác nhau theo dạng cơ số - số mũ 
Duyệt đồng thời 2 queue tới khi 1 trong 2 rỗng 
+ Nếu số mũ (q.top) == nhau thì cộng cơ số và push vào q3
ngược lại thì push nó vào q3
+ Xem q1/q2 còn chưa rỗng thì push nốt 
In q3 ra là xong 


#include<iostream>
#include<bits/stdc++.h>
using namespace std;

main(){
	int t;
	cin >> t;
	string s1;
	string s2;
	cin.ignore();
	while(t--){
		getline(cin,s1);
		stack<int> q1;
		for(int i = 0; i < s1.length() ;i++){
			if(s1[i] >= '0' && s1[i] <= '9'){
				int sum = 0;
				while(s1[i] >='0' && s1[i] <='9'){
					sum = sum * 10 + (s1[i] - '0');
					i++;
				}
				i--;
				q1.push(sum);
			}
		}
		
		getline(cin,s2);
		stack<int> q2;
		for(int i = 0; i < s2.length(); i++){
			if(s2[i] >= '0' && s2[i] <= '9'){
				int sum = 0;
				while(s2[i] >='0' && s2[i] <='9'){
					sum = sum * 10 + (s2[i] - '0');
					i++;
				}
				i--;
				q2.push(sum);
			}
		}
		
//		cout << "q1"<< endl;
//		while(!q1.empty()){
//			cout << q1.top() << " ";
//			q1.pop();
//			cout << q1.top() << endl;
//			q1.pop();
//		}
//		cout <<"q2"<< endl;
//		while(!q2.empty()){
//			cout << q2.top() << " ";
//			q2.pop();
//			cout << q2.top() << endl;
//			q2.pop();
//		}

		stack<int> q3;
		
		while(q1.empty() == 0 && q2.empty() == 0){
			
			if(q1.top() > q2.top()){
				q3.push(q2.top());
				q2.pop();
				q3.push(q2.top());
				q2.pop();
				
			}
			else if(q1.top() < q2.top()){
				q3.push(q1.top());
				q1.pop();
				q3.push(q1.top());
				q1.pop();
			}
			else{
				q3.push(q1.top());
				q1.pop();
				q2.pop();
				q3.push(q1.top() + q2.top());
				q1.pop();
				q2.pop();
			}
			
		}
		
		if(!q1.empty()){
			while(!q1.empty()){
				q3.push(q1.top());
				q1.pop();
			}
		}
		if(!q2.empty()){
			while(!q2.empty()){
				q3.push(q2.top());
				q2.pop();
			}
		}
		
//		while(!q3.empty()){
//			cout << q3.top() << " ";
//			q3.pop();
//			cout << q3.top() << endl;
//			q3.pop();
//		}
		
		while(!q3.empty()){
			cout << q3.top() << "*x^";
			q3.pop();
			cout << q3.top();
			q3.pop();
			if(!q3.empty()) cout <<" + ";
		}
		cout << endl;
	}
    return 0;
}
