/*
B1 . Loại bỏ hết các ngoặc đúng bằng cách
Nếu si = ) thi kiểm tra
+Nếu stack rỗng thì push si
+ Nếu không rỗng thì kiểm tra si-1 = ( hay ko , bằng thì xóa , ko thì lại push si
B2 : Dêm số lần 
Nếu có 2 ngoặc cùng chiều thì dem++
Nếu có 2 ngoăc tạo thành ngoặc đúng thì dem+=2 do )( sau khi vào stack và ra sẽ thành ()
if .... else 
*/
#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int kiemtra(string s){
	stack <char> q;
	for(int i = 0; i < s.length(); i++){
		if((s[i] == '(' ) || (s[i] == '[') || s[i] == '{') q.push(s[i]);
		else {
			if(!q.empty()){
				if(s[i] == ')'){
					if(q.top() != '(') return 0;
			    }
			    if(s[i] == ']'){
			    	if(q.top() != '[') return 0;
				}
				if(s[i] == '}'){
			    	if(q.top() != '{') return 0;
				}
				q.pop(); // sau khi kiem tra neu k retrun 0 thi no dung -> xoa no di
			}
			else return 0; // TH ]{())
		}
    }
    
    return q.empty() == 1;
}

main(){
	string s;
	int t;
	cin >> t;
	
	while(t--){
		cin >> s;
		stack < char> q;
		for(int i = 0; i < s.length(); i++){
			q.push(s[i]);
			char k = q.top();
			if(k == ')'){
				q.pop();
				if(!q.empty()){
					char x = q.top();
					if(x == '(') q.pop();
					else q.push(k);
				}
				else q.push(k);
				
			}
		}
		/*
		while(!q.empty()){
			cout << q.top();
			q.pop();
		}
		cout << endl;
		*/
		int dem = 0;
		while(!q.empty()){
			char x = q.top();
			q.pop();
			char y = q.top();
			q.pop();
			if(x == y) dem++;
			else dem += 2;
		}
		cout << dem << endl;
		
	}
    return 0;
}
