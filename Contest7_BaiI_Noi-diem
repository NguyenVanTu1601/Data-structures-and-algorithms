// Dung cay khung nhỏ nhất bằng Kruskal

#include<iostream>
#include<bits/stdc++.h>
using namespace std;
struct toaDo{
	double x;
	double y;
};
struct Canh{
	int dau;
	int cuoi;
	double trongso;
};

bool cmp(Canh a, Canh b){
	if(a.trongso == b.trongso){
		if(a.dau == b.dau) return a.cuoi < b.cuoi;
		return a.dau < b.dau;
	}
	return a.trongso < b.trongso;
}

int Find(int x, int father[]){
	// Tim nut cha cua nut x
	while(x != father[x]) x = father[x];
	return x;
}

void Union(int x, int y,long long Num[], int father[]){
	// Khi cay con thuoc rung cay goc co so cay it hon vao rung co so say nhieu hon
	if(Num[x] < Num[y]) {
		father[x] = y;
		Num[y] += Num[x];
	}
	
	else{
		father[y] = x;
		Num[x] += Num[y]; 
	}
}


main(){
	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;
		vector<toaDo> toado;
		vector<Canh>E; 
		double a, b;
		double lenKhung = 0;
		int father[2*n+1]; // Cha cua nut x bat ki 
		long long Num[2*n+1]; // So phan tu cua cay con chua x
		Canh x;
		
		for(int i = 1; i <= n; i++){
			cin >> a >> b;
			toaDo k;
			k.x = a;
			k.y = b;
			toado.push_back(k);
		}
		
		for(int i = 0; i < n - 1; i++){
			for(int j = i + 1; j < n; j++){
				x.dau = i + 1;
				x.cuoi = j + 1;
				double m, n;
				m = toado[i].x - toado[j].x;
				n = toado[i].y - toado[j].y;
				x.trongso = sqrt(m*m + n*n);
				E.push_back(x);
			}
		}
		for(int i = 1; i<= n; i++){
			father[i] = i;
			Num[i] = 1;
		}
		sort(E.begin(),E.end(),cmp);
		int socanh = 0;
		int i = 0;
		while(socanh < n-1){
			int x = Find(E[i].dau,father);
			int y = Find(E[i].cuoi,father);
			if(x != y){
				Union(x,y,Num,father);
				socanh++;
				lenKhung += E[i].trongso;
				//T.push_back(E[i]);
				i++;
			}
			else{
				i++;
			}
		}
		printf("%.6f\n",lenKhung);
	}
    return 0;
}

// Edit : Tu Nguyen
