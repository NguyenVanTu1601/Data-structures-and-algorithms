#include<iostream>
using namespace std;

struct node
{
	int data; 
	struct node *pLeft; 
	struct node *pRight;
};
typedef struct node NODE;
typedef NODE* TREE;

// Khoi tao cay
void KhoiTaoCay(TREE &t)
{
	t = NULL;
}

// Them phan tu vao cay
void ThemNodeVaoCay(TREE &t, int x)
{
	// Neu cay rong
	if (t == NULL)
	{
		NODE *p = new NODE;
		p->data = x;
		p->pLeft = NULL;
		p->pRight = NULL;
		t = p;
	}
	else
	{
		if (x < t->data)
		{
			ThemNodeVaoCay(t->pLeft, x);
		}
		else if (x > t->data)
		{
			ThemNodeVaoCay(t->pRight, x);
		}
	}
}


/// Node la
void Node_La(TREE t)
{
	if (t != NULL)
	{
	
		if (t->pLeft == NULL && t->pRight == NULL)
		{
			cout << t->data << " ";
		}
		Node_La(t->pLeft); 
		Node_La(t->pRight);
	}
}


int main()
{
	ios_base::sync_with_stdio(false);
	TREE x;
	int t;
	cin >> t;
	while(t--){
		KhoiTaoCay(x);
		int n;
		cin >> n;
		int z;
		for(int i = 1; i <= n; i++){
			cin >> z;
			ThemNodeVaoCay(x,z);
		}
		Node_La(x);
		cout << endl;
	}
	return 0;
}

// Edit : Tu Nguyen
