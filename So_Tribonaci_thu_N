#include<iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll long long

ll sum = 0;
ll M = 1e15+7;
class Matran{
	public :
	    ll x[3][3];
	    Matran(ll a, ll b ,ll c, ll d, ll e, ll f, ll g, ll h, ll i){
	    	x[0][0] = a;
	    	x[0][1] = b;
	    	x[0][2] = c;
			x[1][0] = d;
	    	x[1][1] = e;
	    	x[1][2] = f;
	    	x[2][0] = g;
	    	x[2][1] = h;
	    	x[2][2] = i;
		}
		
		Matran operator * (Matran &a ){
			Matran c(0,0,0,0,0,0,0,0,0);
			for(int i = 0; i < 3; i++)
		        for(int j = 0; j < 3 ; j ++) 
			        for(int l = 0; l < 3; l++)
				        c.x[i][j] =  (c.x[i][j] + x[i][l] * a.x[l][j]) % M;
			return c;
		}
		
		void xem(){
			for(int i = 0; i < 3; i++)
		        for(int j = 0; j < 3 ; j ++) {
		        	cout << x[i][j] << " ";
				}
				cout << endl;
		            
		}
		
		int ketqua(){
			return x[0][1];
		}
};

Matran power(int n){
		Matran a(1,1,1,1,0,0,0,1,0);
		if(n == 1) {
			return a;
		}
		
		else{
			Matran t = power(n/2);
			t = t * t;
			if(n % 2 == 1)  {
				return t * a;
			}
			else{
				return t;
			} 
		}
}
main(){
	int t;
	int n;
	cin >> t;
	while(t--){
		cin >> n;
		Matran x = power(n);
		cout << x.ketqua() << endl;
	}
	
	
}
